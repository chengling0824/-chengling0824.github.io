<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>chenry&#39;s sky</title>
  
  
  <link href="https://chengling0824.github.io/atom.xml" rel="self"/>
  
  <link href="https://chengling0824.github.io/"/>
  <updated>2021-04-09T01:10:53.148Z</updated>
  <id>https://chengling0824.github.io/</id>
  
  <author>
    <name>程羚</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>设置hexo首页只显示部分摘要（不显示全文）</title>
    <link href="https://chengling0824.github.io/2021/04/01/hexo%E6%A0%B7%E5%BC%8F%E8%B0%83%E6%95%B4%E8%AE%B0%E5%BD%95/"/>
    <id>https://chengling0824.github.io/2021/04/01/hexo%E6%A0%B7%E5%BC%8F%E8%B0%83%E6%95%B4%E8%AE%B0%E5%BD%95/</id>
    <published>2021-04-01T06:51:24.000Z</published>
    <updated>2021-04-09T01:10:53.148Z</updated>
    
    <content type="html"><![CDATA[<p>首先，修改配置</p><p>首先需要在Next主题的_config.yml中把设置打开：(默认安装时就打开了)</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Automatically excerpt description in homepage as preamble text.</span></span><br><span class="line"><span class="attr">excerpt_description:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><span id="more"></span><p>然后，有两种方法：</p><p>方法一：写概述</p><p>在文章的<code>front-matter</code>中添加<code>description</code>，其中description中的内容就会被显示在首页上，其余一律不显示。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 让首页显示部分内容</span><br><span class="line">date: 2020-02-23 22:55:10</span><br><span class="line">description: 这是显示在首页的概述，正文内容均会被隐藏。</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>方法二：文章截断</p><p>在需要截断的地方加入：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--more--&gt;</span><br></pre></td></tr></table></figure><p>首页就会显示这条以上的所有内容，隐藏接下来的所有内容。<br>例如本文会显示到<code>修改配置</code>上面。</p>]]></content>
    
    
    <summary type="html">一、修改配置 首先需要在Next主题的_config.yml中把设置打开：(默认安装时就打开了)  然后，有两种方法：方法一：写概述 在文章的`front-matter`中添加`description`，其中description中的内容就会被显示在首页上，其余一律不显示。</summary>
    
    
    
    <category term="hexo—theme-next" scheme="https://chengling0824.github.io/categories/hexo%E2%80%94theme-next/"/>
    
    
  </entry>
  
  <entry>
    <title>2020 前端技术发展回顾</title>
    <link href="https://chengling0824.github.io/2021/04/01/2020-%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95%E5%9B%9E%E9%A1%BE/"/>
    <id>https://chengling0824.github.io/2021/04/01/2020-%E5%89%8D%E7%AB%AF%E6%8A%80%E6%9C%AF%E5%8F%91%E5%B1%95%E5%9B%9E%E9%A1%BE/</id>
    <published>2021-04-01T06:45:52.000Z</published>
    <updated>2021-04-01T06:49:52.712Z</updated>
    
    <content type="html"><![CDATA[<p>2020 前端技术发展回顾：</p><p><a href="https://zhuanlan.zhihu.com/p/343552059?utm_source=wechat_timeline&amp;utm_medium=social&amp;utm_oi=42082701934592">https://zhuanlan.zhihu.com/p/343552059?utm_source=wechat_timeline&amp;utm_medium=social&amp;utm_oi=42082701934592</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;2020 前端技术发展回顾：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/343552059?utm_source=wechat_timeline&amp;amp;utm_medium=social&amp;amp;utm_oi=4208270</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>vue基础</title>
    <link href="https://chengling0824.github.io/2021/03/30/vue%E5%9F%BA%E7%A1%80/"/>
    <id>https://chengling0824.github.io/2021/03/30/vue%E5%9F%BA%E7%A1%80/</id>
    <published>2021-03-30T03:43:27.000Z</published>
    <updated>2021-04-01T06:49:26.509Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Vue (读音 /vjuː/，类似于 <strong>view</strong>) 是一套用于构建用户界面的<strong>渐进式框架</strong>。</p></blockquote><span id="more"></span><h1 id="1-vue指令"><a href="#1-vue指令" class="headerlink" title="1 vue指令"></a>1 vue指令</h1><blockquote><p>指令带有前缀 v-，以表示它们是 Vue 提供的特殊 attribute。它们会在渲染的 DOM 上应用特殊的响应式行为。</p></blockquote><h2 id="v-clock-解决文字闪动的问题"><a href="#v-clock-解决文字闪动的问题" class="headerlink" title="v-clock 解决文字闪动的问题"></a>v-clock 解决文字闪动的问题</h2><h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><ol><li>提供样式<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[v-clock]&#123;</span><br><span class="line">    display:none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在插值表达式所在的标签中添加v-clock指令<br>先通过样式隐藏内容，然后在内存中进行值的替换，替换好后显示最终的结果。（解决了文字闪动的问题）</li></ol><h2 id="文本插值与-v-text、v-html、v-pre"><a href="#文本插值与-v-text、v-html、v-pre" class="headerlink" title="文本插值与 v-text、v-html、v-pre"></a>文本插值与 v-text、v-html、v-pre</h2><p>v-text<br>v-html<br>v-pre : 显示原始信息，跳过编译过程</p><h2 id="数据响应式与-v-once"><a href="#数据响应式与-v-once" class="headerlink" title="数据响应式与 v-once"></a>数据响应式与 v-once</h2><blockquote><p>数据响应式：数据和 DOM 被建立某种关联，数据的变化导致页面内容的变化</p></blockquote><p>v-once：只编译一次，不具有响应式功能</p><h2 id="属性绑定-v-bind-："><a href="#属性绑定-v-bind-：" class="headerlink" title="属性绑定 v-bind / ："></a>属性绑定 v-bind / ：</h2><h3 id="样式绑定"><a href="#样式绑定" class="headerlink" title="样式绑定"></a>样式绑定</h3><p><strong>对象语法</strong>：<code>v-bind:class(类名: data中属性，值为true就会添加该样式)&quot;</code></p><p>v-bind:class={类名1:data中的属性1，类名2:data中的属性2}</p><p><strong>数组语法</strong>：class类名放在<strong>data</strong>属性中当做值，然后将<strong>data</strong>中的值放在数组中渲染给元素<code> v-bind:class&quot;[data属性名1，data属性名2]&quot;</code></p><p><strong>style绑定</strong>：<code>v-bind:style&#123;color颜色名: data中的属性名&#125;</code>或<code>v-bind:style=&quot;[data属性名1，data属性名2]&quot;</code></p><h2 id="双向数据绑定-v-model"><a href="#双向数据绑定-v-model" class="headerlink" title="双向数据绑定 v-model"></a>双向数据绑定 v-model</h2><p>实现<strong>表单输入</strong>和应用状态之间的双向绑定</p><p><code>v-model=&#39;msg&#39;</code>相当于<code>v-bind:value=&quot;msg&quot; v-on:input=&#39;msg=$event.target.value&#39;</code>,实时更新msg的值</p><h2 id="事件监听-v-on"><a href="#事件监听-v-on" class="headerlink" title="事件监听 v-on / @"></a>事件监听 v-on / @</h2><p><code>@click=&#39;num++&#39;</code> （num在data中定义）</p><p><code>@click=&#39;handle&#39;</code>或<code>@click=&#39;handle()&#39;</code>    （handle函数在methods中定义）</p><blockquote><p>在methods中，this是vue的实例对象</p></blockquote><h2 id="分支循环结构"><a href="#分支循环结构" class="headerlink" title="分支循环结构"></a>分支循环结构</h2><h3 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h3><p>v-if</p><p>v-else</p><p>v-else-if</p><p>v-show</p><h3 id="循环结构-v-for"><a href="#循环结构-v-for" class="headerlink" title="循环结构 v-for"></a>循环结构 v-for</h3><p>v-for遍历数组：<code>v-for=&quot;(item, index) in list :key=&quot;item.id&quot;&quot;</code></p><p>v-for遍历对象：<code> v-for (属性值v, 属性名k，索引 i )in 遍历的对象</code></p><h2 id="时间修饰符"><a href="#时间修饰符" class="headerlink" title="时间修饰符"></a>时间修饰符</h2><h3 id="stop-阻止冒泡"><a href="#stop-阻止冒泡" class="headerlink" title=".stop 阻止冒泡"></a>.stop 阻止冒泡</h3><p>调用<code>event.stopPropagation( )</code></p><h3 id="prevent-阻止默认行为"><a href="#prevent-阻止默认行为" class="headerlink" title=".prevent 阻止默认行为"></a>.prevent 阻止默认行为</h3><p>调用<code>event.preventDefault( )</code></p><p><code> v-on:click.prevent.self</code> 阻止所有点击</p><p><code>v-on:click.self.prevent</code> 阻止自身的点击</p><h3 id="others"><a href="#others" class="headerlink" title="others"></a>others</h3><p>.capture 添加事件侦听器时使用capture模式</p><p>.self 事件从侦听器绑定元素本身触发时才触发回调</p><p>.once 只触发一次</p><p>.passive</p><h2 id="按键修饰符-keyup"><a href="#按键修饰符-keyup" class="headerlink" title="按键修饰符 .keyup"></a>按键修饰符 .keyup</h2><blockquote><p>在监听键盘事件时，我们需要检查详细的按键。Vue允许为<code>v-on</code>在监听键盘时添加按键修饰符：</p></blockquote><h3 id="按键码"><a href="#按键码" class="headerlink" title="按键码"></a>按键码</h3><p><code>.enter</code>，<code>.tab</code>，<code>.delete</code>(捕获‘删除’键和‘退格’键)，<code>.esc</code></p><p><code>.up</code>，<code>.down</code>，<code>.left</code>，<code>.right</code></p><h3 id="自定义按键修饰符"><a href="#自定义按键修饰符" class="headerlink" title="自定义按键修饰符"></a>自定义按键修饰符</h3><p>可以通过<code>config.keyCodes</code>对象自定义<strong>按键修饰符别名</strong>，如<code>Vue.config.keyCodes.f1 = 11</code></p><h1 id="2-自定义指令、计算、侦听、过滤器、生命周期"><a href="#2-自定义指令、计算、侦听、过滤器、生命周期" class="headerlink" title="2 自定义指令、计算、侦听、过滤器、生命周期"></a>2 自定义指令、计算、侦听、过滤器、生命周期</h1><h1 id="3-vue组件"><a href="#3-vue组件" class="headerlink" title="3 vue组件"></a>3 vue组件</h1><blockquote><p>组件系统是 Vue 的另一个重要概念，因为它是一种抽象，允许我们使用小型、独立和通常可复用的组件构建大型应用。仔细想想，几乎任意类型的应用界面都可以抽象为一个组件树</p></blockquote><h1 id="4-Promise"><a href="#4-Promise" class="headerlink" title="4 Promise"></a>4 Promise</h1><h1 id="5-数据请求：Fetch-API"><a href="#5-数据请求：Fetch-API" class="headerlink" title="5 数据请求：Fetch API"></a>5 数据请求：Fetch API</h1>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Vue (读音 /vjuː/，类似于 &lt;strong&gt;view&lt;/strong&gt;) 是一套用于构建用户界面的&lt;strong&gt;渐进式框架&lt;/strong&gt;。&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="vue" scheme="https://chengling0824.github.io/categories/vue/"/>
    
    
  </entry>
  
  <entry>
    <title>markdown常见指令</title>
    <link href="https://chengling0824.github.io/2021/03/24/markdown%E5%B8%B8%E8%A7%81%E6%8C%87%E4%BB%A4/"/>
    <id>https://chengling0824.github.io/2021/03/24/markdown%E5%B8%B8%E8%A7%81%E6%8C%87%E4%BB%A4/</id>
    <published>2021-03-24T04:08:02.000Z</published>
    <updated>2021-04-01T06:49:40.070Z</updated>
    
    <content type="html"><![CDATA[<h2 id="标题："><a href="#标题：" class="headerlink" title="标题："></a>标题：</h2><p>   · 标题通过 <code>#</code> 的个数来进行区分，Mardown总共支持6级标题。</p><span id="more"></span><h2 id="字体设置："><a href="#字体设置：" class="headerlink" title="字体设置："></a>字体设置：</h2><p>   · <strong>粗体：</strong><br>        字符串前后均加上 <code>**</code></p><p>   · <em>斜体</em><br>        字符串前后均加上 <code>*</code></p><p>   · <del>删除线</del><br>        字符串前后各加 <code>~~</code></p><p>   · 标记<br>        字体前后加上 ` (Esc下方的那个键)     </p><h2 id="区块引用："><a href="#区块引用：" class="headerlink" title="区块引用："></a>区块引用：</h2><blockquote><p>在使用的地方引用 <code>&gt;</code> (后面文本加空格)</p></blockquote><h2 id="首行缩进或空格"><a href="#首行缩进或空格" class="headerlink" title="首行缩进或空格"></a>首行缩进或空格</h2><p>   &nbsp; <code>&amp;nbsp;</code></p><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>   · 连续多个（- 或 * 或 _）</p><hr><hr><h2 id="图片和链接"><a href="#图片和链接" class="headerlink" title="图片和链接"></a>图片和链接</h2><p>   图片<br>       <code>![]() : [图片名称] (图片网络地址)</code></p><p>   链接<br>       <code>[]() ： [链接名称(可自定义)] (链接地址)</code></p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>   · 使用（<code>```  代码  ```</code>）</p><h2 id="网址自动转换"><a href="#网址自动转换" class="headerlink" title="网址自动转换"></a>网址自动转换</h2><p>   · 使用<code>&lt;&gt;</code>就会自动把它转成链接</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;标题：&quot;&gt;&lt;a href=&quot;#标题：&quot; class=&quot;headerlink&quot; title=&quot;标题：&quot;&gt;&lt;/a&gt;标题：&lt;/h2&gt;&lt;p&gt;   · 标题通过 &lt;code&gt;#&lt;/code&gt; 的个数来进行区分，Mardown总共支持6级标题。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello Hexo</title>
    <link href="https://chengling0824.github.io/2021/03/24/hello-hexo/"/>
    <id>https://chengling0824.github.io/2021/03/24/hello-hexo/</id>
    <published>2021-03-24T04:04:19.812Z</published>
    <updated>2021-04-01T06:39:58.051Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
